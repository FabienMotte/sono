{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/sono.js","node_modules/browserify/node_modules/events/events.js","src/lib/effect.js","src/lib/effect/analyser.js","src/lib/effect/distortion.js","src/lib/effect/echo.js","src/lib/effect/fake-context.js","src/lib/effect/filter.js","src/lib/effect/flanger.js","src/lib/effect/panner.js","src/lib/effect/phaser.js","src/lib/effect/recorder.js","src/lib/effect/reverb.js","src/lib/group.js","src/lib/sound.js","src/lib/source/buffer-source.js","src/lib/source/media-source.js","src/lib/source/microphone-source.js","src/lib/source/oscillator-source.js","src/lib/source/script-source.js","src/lib/utils/browser.js","src/lib/utils/emitter.js","src/lib/utils/file.js","src/lib/utils/loader.js","src/lib/utils/microphone.js","src/lib/utils/sound-group.js","src/lib/utils/utils.js","src/lib/utils/waveform.js"],"names":[],"mappings":"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","file":"sono.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\nvar Browser = require('./lib/utils/browser.js'),\n    File = require('./lib/utils/file.js'),\n    Group = require('./lib/group.js'),\n    Loader = require('./lib/utils/loader.js'),\n    Sound = require('./lib/sound.js'),\n    SoundGroup = require('./lib/utils/sound-group.js'),\n    Utils = require('./lib/utils/utils.js');\n\nfunction Sono() {\n    this.VERSION = '0.0.7';\n\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    var context = window.AudioContext ? new window.AudioContext() : null;\n    var destination = context ? context.destination : null;\n\n    this._group = new Group(context, destination);\n    this._gain = this._group.gain;\n    this._sounds = this._group.sounds;\n    this._context = context;\n\n    Utils.setContext(context);\n    this._handleTouchlock();\n    this._handlePageVisibility();\n}\n\n/*\n * Create\n *\n * Accepted values for param config:\n * Object config e.g. { id:'foo', url:['foo.ogg', 'foo.mp3'] }\n * Array (of files e.g. ['foo.ogg', 'foo.mp3'])\n * ArrayBuffer\n * HTMLMediaElement\n * Filename string (e.g. 'foo.ogg')\n * Oscillator type string (i.e. 'sine', 'square', 'sawtooth', 'triangle')\n * ScriptProcessor config object (e.g. { bufferSize: 1024, channels: 1, callback: fn, thisArg: self })\n */\n\nSono.prototype.createSound = function(config) {\n    // try to load if config contains URLs\n    if(File.containsURL(config)) {\n        return this.load(config);\n    }\n    // option to use simple audio el\n    var context = (config && config.noWebAudio) ? null : this._context;\n    // otherwise just return a new sound object\n    var sound = new Sound(context, this._gain);\n    sound.isTouchLocked = this._isTouchLocked;\n    if(config) {\n        sound.data = config.data || config;\n        sound.id = config.id !== undefined ? config.id : '';\n        sound.loop = !!config.loop;\n        sound.volume = config.volume;\n    }\n    this._group.add(sound);\n\n    return sound;\n};\n\n/*\n * Destroy\n */\n\nSono.prototype.destroySound = function(soundOrId) {\n    if(!soundOrId) { return; }\n\n    this._sounds.some(function(sound, index, sounds) {\n        if(sound === soundOrId || sound.id === soundOrId) {\n            sounds.splice(index, 1);\n            sound.destroy();\n            return true;\n        }\n    });\n    return this;\n};\n\nSono.prototype.destroyAll = function() {\n    this._group.destroy();\n    return this;\n};\n\n/*\n * Get Sound by id\n */\n\nSono.prototype.getSound = function(id) {\n    var sound = null;\n    this._sounds.some(function(item) {\n        if(item.id === id) {\n            sound = item;\n            return true;\n        }\n    });\n    return sound;\n};\n\n/*\n * Create group\n */\n\nSono.prototype.createGroup = function(sounds) {\n    var group = new SoundGroup(this._context, this._gain);\n    if(sounds) {\n        sounds.forEach(function(sound) {\n            group.add(sound);\n        });\n    }\n    return group;\n};\n\n/*\n * Loading\n */\n\nSono.prototype.load = function(config) {\n    if(!config) {\n        throw new Error('ArgumentException: Sono.load: param config is undefined');\n    }\n\n    var onProgress = config.onProgress,\n        onComplete = config.onComplete,\n        thisArg = config.thisArg || config.context || this,\n        url = config.url || config,\n        sound,\n        loader;\n\n    if(File.containsURL(url)) {\n        sound = this._queue(config);\n        loader = sound.loader;\n    }\n    else if(Array.isArray(url) && File.containsURL(url[0].url) ) {\n        sound = [];\n        loader = new Loader.Group();\n\n        url.forEach(function(file) {\n            sound.push(this._queue(file, loader));\n        }, this);\n    }\n    else {\n        return null;\n    }\n\n    if(onProgress) {\n        loader.on('progress', function(progress) {\n            onProgress.call(thisArg, progress);\n        });\n    }\n    if(onComplete) {\n        loader.once('complete', function() {\n            loader.off('progress');\n            onComplete.call(thisArg, sound);\n        });\n    }\n    loader.start();\n\n    return sound;\n};\n\nSono.prototype._queue = function(config, group) {\n    var context = (config && config.noWebAudio) ? null : this._context;\n    var sound = new Sound(context, this._gain);\n    sound.isTouchLocked = this._isTouchLocked;\n    this._group.add(sound);\n\n    sound.id = config.id !== undefined ? config.id : '';\n    sound.loop = !!config.loop;\n    sound.volume = config.volume;\n    sound.load(config);\n\n    if(group) { group.add(sound.loader); }\n\n    return sound;\n};\n\n/*\n * Controls\n */\n\nSono.prototype.mute = function() {\n    this._group.mute();\n    return this;\n};\n\nSono.prototype.unMute = function() {\n    this._group.unMute();\n    return this;\n};\n\nObject.defineProperty(Sono.prototype, 'volume', {\n    get: function() {\n        return this._group.volume;\n    },\n    set: function(value) {\n        this._group.volume = value;\n    }\n});\n\nSono.prototype.fade = function(volume, duration) {\n    this._group.fade(volume, duration);\n    return this;\n};\n\nSono.prototype.pauseAll = function() {\n    this._group.pause();\n    return this;\n};\n\nSono.prototype.resumeAll = function() {\n    this._group.resume();\n    return this;\n};\n\nSono.prototype.stopAll = function() {\n    this._group.stop();\n    return this;\n};\n\nSono.prototype.play = function(id, delay, offset) {\n    this.getSound(id).play(delay, offset);\n    return this;\n};\n\nSono.prototype.pause = function(id) {\n    this.getSound(id).pause();\n    return this;\n};\n\nSono.prototype.stop = function(id) {\n    this.getSound(id).stop();\n    return this;\n};\n\n/*\n * Mobile touch lock\n */\n\nSono.prototype._handleTouchlock = function() {\n    var onUnlock = function() {\n        this._isTouchLocked = false;\n        this._sounds.forEach(function(sound) {\n            sound.isTouchLocked = false;\n            if(sound.loader) {\n                sound.loader.isTouchLocked = false;\n            }\n        });\n    };\n    this._isTouchLocked = Browser.handleTouchLock(onUnlock, this);\n};\n\n/*\n * Page visibility events\n */\n\nSono.prototype._handlePageVisibility = function() {\n    var pageHiddenPaused = [],\n        sounds = this._sounds;\n\n    // pause currently playing sounds and store refs\n    function onHidden() {\n        sounds.forEach(function(sound) {\n            if(sound.playing) {\n                sound.pause();\n                pageHiddenPaused.push(sound);\n            }\n        });\n    }\n\n    // play sounds that got paused when page was hidden\n    function onShown() {\n        while(pageHiddenPaused.length) {\n            pageHiddenPaused.pop().play();\n        }\n    }\n\n    Browser.handlePageVisibility(onHidden, onShown, this);\n};\n\n/*\n * Log version & device support info\n */\n\nSono.prototype.log = function() {\n    var title = 'Sono ' + this.VERSION,\n        info = 'Supported:' + this.isSupported +\n               ' WebAudioAPI:' + this.hasWebAudio +\n               ' TouchLocked:' + this._isTouchLocked +\n               ' Extensions:' + File.extensions;\n\n    if(navigator.userAgent.indexOf('Chrome') > -1) {\n        var args = [\n                '%c ♫ ' + title +\n                ' ♫ %c ' + info + ' ',\n                'color: #FFFFFF; background: #379F7A',\n                'color: #1F1C0D; background: #E0FBAC'\n            ];\n        console.log.apply(console, args);\n    }\n    else if (window.console && window.console.log.call) {\n        console.log.call(console, title + ' ' + info);\n    }\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(Sono.prototype, {\n    'canPlay': {\n        get: function() {\n            return File.canPlay;\n        }\n    },\n    'context': {\n        get: function() {\n            return this._context;\n        }\n    },\n    'effect': {\n        get: function() {\n            return this._group.effect;\n        }\n    },\n    'extensions': {\n        get: function() {\n            return File.extensions;\n        }\n    },\n    'hasWebAudio': {\n        get: function() {\n            return !!this._context;\n        }\n    },\n    'isSupported': {\n        get: function() {\n            return File.extensions.length > 0;\n        }\n    },\n    'gain': {\n        get: function() {\n            return this._gain;\n        }\n    },\n    'sounds': {\n        get: function() {\n            return this._group.sounds.slice(0);\n        }\n    },\n    'utils': {\n        get: function() {\n            return Utils;\n        }\n    }\n});\n\n/*\n * Exports\n */\n\nmodule.exports = new Sono();\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      }\n      throw TypeError('Uncaught, unspecified \"error\" event.');\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        len = arguments.length;\n        args = new Array(len - 1);\n        for (i = 1; i < len; i++)\n          args[i - 1] = arguments[i];\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    len = arguments.length;\n    args = new Array(len - 1);\n    for (i = 1; i < len; i++)\n      args[i - 1] = arguments[i];\n\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    var m;\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  var ret;\n  if (!emitter._events || !emitter._events[type])\n    ret = 0;\n  else if (isFunction(emitter._events[type]))\n    ret = 1;\n  else\n    ret = emitter._events[type].length;\n  return ret;\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nvar Analyser = require('./effect/analyser.js'),\n    Distortion = require('./effect/distortion.js'),\n    Echo = require('./effect/echo.js'),\n    FakeContext = require('./effect/fake-context.js'),\n    Filter = require('./effect/filter.js'),\n    Flanger = require('./effect/flanger.js'),\n    Panner = require('./effect/panner.js'),\n    Phaser = require('./effect/phaser.js'),\n    Recorder = require('./effect/recorder.js'),\n    Reverb = require('./effect/reverb.js');\n\nfunction Effect(context) {\n    this._context = context || new FakeContext();\n    this._destination = null;\n    this._nodeList = [];\n    this._sourceNode = null;\n}\n\nEffect.prototype.add = function(node) {\n    if(!node) { return; }\n    this._nodeList.push(node);\n    this._updateConnections();\n    return node;\n};\n\nEffect.prototype.remove = function(node) {\n    var l = this._nodeList.length;\n    for (var i = 0; i < l; i++) {\n        if(node === this._nodeList[i]) {\n            this._nodeList.splice(i, 1);\n            break;\n        }\n    }\n    var output = node._output || node;\n    output.disconnect();\n    this._updateConnections();\n    return node;\n};\n\nEffect.prototype.removeAll = function() {\n    while(this._nodeList.length) {\n        this._nodeList.pop().disconnect();\n    }\n    this._updateConnections();\n    return this;\n};\n\nEffect.prototype.destroy = function() {\n    this._context = null;\n    this._destination = null;\n    this._nodeList = [];\n    this._sourceNode = null;\n};\n\nEffect.prototype._connect = function(a, b) {\n    //console.log('> connect', (a.name || a.constructor.name), 'to', (b.name || b.constructor.name));\n\n    var output = a._output || a;\n    //console.log('> disconnect output: ', (a.name || a.constructor.name));\n    output.disconnect();\n    //console.log('> connect output: ', (a.name || a.constructor.name), 'to input:', (b.name || b.constructor.name));\n    output.connect(b);\n};\n\nEffect.prototype._connectToDestination = function(destination) {\n    var l = this._nodeList.length,\n        lastNode = l ? this._nodeList[l - 1] : this._sourceNode;\n\n    if(lastNode) {\n        this._connect(lastNode, destination);\n    }\n\n    this._destination = destination;\n};\n\nEffect.prototype._updateConnections = function() {\n    if(!this._sourceNode) { return; }\n\n    //console.log('updateConnections:', this._nodeList.length);\n\n    var node,\n        prev;\n\n    for (var i = 0; i < this._nodeList.length; i++) {\n        node = this._nodeList[i];\n        //console.log(i, node);\n        prev = i === 0 ? this._sourceNode : this._nodeList[i - 1];\n        this._connect(prev, node);\n    }\n\n    if(this._destination) {\n        this._connectToDestination(this._destination);\n    }\n};\n\nObject.defineProperty(Effect.prototype, 'panning', {\n    get: function() {\n        if(!this._panning) {\n            this._panning = new Panner(this._context);\n        }\n        return this._panning;\n    }\n});\n\n/*\n * Effects\n */\n\nEffect.prototype.analyser = function(fftSize, smoothing, minDecibels, maxDecibels) {\n    var analyser = new Analyser(this._context, fftSize, smoothing, minDecibels, maxDecibels);\n    return this.add(analyser);\n};\n\n// lowers the volume of the loudest parts of the signal and raises the volume of the softest parts\nEffect.prototype.compressor = function(config) {\n    config = config || {};\n\n    var node = this._context.createDynamicsCompressor();\n\n    node.update = function(config) {\n        // min decibels to start compressing at from -100 to 0\n        node.threshold.value = config.threshold !== undefined ? config.threshold : -24;\n        // decibel value to start curve to compressed value from 0 to 40\n        node.knee.value = config.knee !== undefined ? config.knee : 30;\n        // amount of change per decibel from 1 to 20\n        node.ratio.value = config.ratio !== undefined ? config.ratio : 12;\n        // gain reduction currently applied by compressor from -20 to 0\n        node.reduction.value = config.reduction !== undefined ? config.reduction : -10;\n        // seconds to reduce gain by 10db from 0 to 1 - how quickly signal adapted when volume increased\n        node.attack.value = config.attack !== undefined ? config.attack : 0.0003;\n        // seconds to increase gain by 10db from 0 to 1 - how quickly signal adapted when volume redcuced\n        node.release.value = config.release !== undefined ? config.release : 0.25;\n    };\n\n    node.update(config);\n\n    return this.add(node);\n};\n\nEffect.prototype.convolver = function(impulseResponse) {\n    // impulseResponse is an audio file buffer\n    var node = this._context.createConvolver();\n    node.buffer = impulseResponse;\n    return this.add(node);\n};\n\nEffect.prototype.delay = function(time) {\n    var node = this._context.createDelay();\n    if(time !== undefined) { node.delayTime.value = time; }\n    return this.add(node);\n};\n\nEffect.prototype.echo = function(time, gain) {\n    var node = new Echo(this._context, time, gain);\n    return this.add(node);\n};\n\nEffect.prototype.distortion = function(amount) {\n    var node = new Distortion(this._context, amount);\n    // Float32Array defining curve (values are interpolated)\n    //node.curve\n    // up-sample before applying curve for better resolution result 'none', '2x' or '4x'\n    //node.oversample = '2x';\n    return this.add(node);\n};\n\nEffect.prototype.filter = function(type, frequency, quality, gain) {\n    var filter = new Filter(this._context, type, frequency, quality, gain);\n    return this.add(filter);\n};\n\nEffect.prototype.lowpass = function(frequency, quality, gain) {\n    return this.filter('lowpass', frequency, quality, gain);\n};\n\nEffect.prototype.highpass = function(frequency, quality, gain) {\n    return this.filter('highpass', frequency, quality, gain);\n};\n\nEffect.prototype.bandpass = function(frequency, quality, gain) {\n    return this.filter('bandpass', frequency, quality, gain);\n};\n\nEffect.prototype.lowshelf = function(frequency, quality, gain) {\n    return this.filter('lowshelf', frequency, quality, gain);\n};\n\nEffect.prototype.highshelf = function(frequency, quality, gain) {\n    return this.filter('highshelf', frequency, quality, gain);\n};\n\nEffect.prototype.peaking = function(frequency, quality, gain) {\n    return this.filter('peaking', frequency, quality, gain);\n};\n\nEffect.prototype.notch = function(frequency, quality, gain) {\n    return this.filter('notch', frequency, quality, gain);\n};\n\nEffect.prototype.allpass = function(frequency, quality, gain) {\n    return this.filter('allpass', frequency, quality, gain);\n};\n\nEffect.prototype.flanger = function(config) {\n    var node = new Flanger(this._context, config);\n    return this.add(node);\n};\n\nEffect.prototype.gain = function(value) {\n    var node = this._context.createGain();\n    if(value !== undefined) {\n        node.gain.value = value;\n    }\n    return node;\n};\n\nEffect.prototype.panner = function() {\n    var node = new Panner(this._context);\n    return this.add(node);\n};\n\nEffect.prototype.phaser = function(config) {\n    var node = new Phaser(this._context, config);\n    return this.add(node);\n};\n\nEffect.prototype.recorder = function(passThrough) {\n    var node = new Recorder(this._context, passThrough);\n    return this.add(node);\n};\n\nEffect.prototype.reverb = function(seconds, decay, reverse) {\n    var node = new Reverb(this._context, seconds, decay, reverse);\n    return this.add(node);\n};\n\nEffect.prototype.script = function(config) {\n    config = config || {};\n    // bufferSize 256 - 16384 (pow 2)\n    var bufferSize = config.bufferSize || 1024;\n    var inputChannels = config.inputChannels === undefined ? 0 : inputChannels;\n    var outputChannels = config.outputChannels === undefined ? 1 : outputChannels;\n    \n    var node = this._context.createScriptProcessor(bufferSize, inputChannels, outputChannels);\n    \n    var thisArg = config.thisArg || config.context || node;\n    var callback = config.callback || function() {};\n\n    // available props:\n    /*\n    event.inputBuffer\n    event.outputBuffer\n    event.playbackTime\n    */\n    // Example: generate noise\n    /*\n    var output = event.outputBuffer.getChannelData(0);\n    var l = output.length;\n    for (var i = 0; i < l; i++) {\n        output[i] = Math.random();\n    }\n    */\n    node.onaudioprocess = callback.bind(thisArg);\n\n    return this.add(node);\n};\n\nEffect.prototype.setSource = function(node) {\n    this._sourceNode = node;\n    this._updateConnections();\n    return node;\n};\n\nEffect.prototype.setDestination = function(node) {\n    this._connectToDestination(node);\n    return node;\n};\n\nmodule.exports = Effect;\n","'use strict';\n\nfunction Analyser(context, fftSize, smoothing, minDecibels, maxDecibels) {\n    fftSize = fftSize || 32;\n    var waveformData, frequencyData;\n\n    var node = context.createAnalyser();\n    node.fftSize = fftSize; // frequencyBinCount will be half this value\n\n    if(smoothing !== undefined) { node.smoothingTimeConstant = smoothing; }\n    if(minDecibels !== undefined) { node.minDecibels = minDecibels; }\n    if(maxDecibels !== undefined) { node.maxDecibels = maxDecibels; }\n\n    var updateFFTSize = function() {\n        if(fftSize !== node.fftSize || waveformData === undefined) {\n            waveformData = new Uint8Array(node.fftSize);\n            frequencyData = new Uint8Array(node.frequencyBinCount);\n            fftSize = node.fftSize;\n        }\n    };\n    updateFFTSize();\n\n    node.getWaveform = function() {\n        updateFFTSize();\n        this.getByteTimeDomainData(waveformData);\n        return waveformData;\n    };\n\n    node.getFrequencies = function() {\n        updateFFTSize();\n        this.getByteFrequencyData(frequencyData);\n        return frequencyData;\n    };\n\n    // map native properties of AnalyserNode\n    Object.defineProperties(node, {\n        'smoothing': {\n            // 0 to 1\n            get: function() { return node.smoothingTimeConstant; },\n            set: function(value) { node.smoothingTimeConstant = value; }\n        }\n    });\n\n    return node;\n}\n\nmodule.exports = Analyser;\n","'use strict';\n\nfunction Distortion(context, amount) {\n\n    amount = amount || 1;\n    \n    var node = context.createWaveShaper();\n\n    // create waveShaper distortion curve from 0 to 1\n    node.update = function(value) {\n        amount = value;\n        var k = value * 100,\n            n = 22050,\n            curve = new Float32Array(n),\n            deg = Math.PI / 180,\n            x;\n\n        for (var i = 0; i < n; i++) {\n            x = i * 2 / n - 1;\n            curve[i] = (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n        }\n\n        this.curve = curve;\n    };\n\n    Object.defineProperties(node, {\n        'amount': {\n            get: function() { return amount; },\n            set: function(value) { this.update(value); }\n        }\n    });\n\n    if(amount !== undefined) {\n        node.update(amount);\n    }\n\n    return node;\n}\n\nmodule.exports = Distortion;\n","'use strict';\n\nfunction Echo(context, delayTime, gainValue) {\n    var input = context.createGain();\n    var delay = context.createDelay();\n    var gain = context.createGain();\n    var output = context.createGain();\n\n    gain.gain.value = gainValue || 0.5;\n    delay.delayTime.value = delayTime || 0.5;\n\n    input.connect(delay);\n    input.connect(output);\n    delay.connect(gain);\n    gain.connect(delay);\n    gain.connect(output);\n\n    var node = input;\n    node.name = 'Echo';\n    node._output = output;\n\n    Object.defineProperties(node, {\n        delay: {\n            get: function() { return delay.delayTime.value; },\n            set: function(value) { delay.delayTime.value = value; }\n        },\n        feedback: {\n            get: function() { return gain.gain.value; },\n            set: function(value) { gain.gain.value = value; }\n        }\n    });\n\n    return node;\n}\n\nmodule.exports = Echo;\n","'use strict';\n\nfunction FakeContext() {\n\n    var startTime = Date.now();\n\n    var fn = function(){};\n\n    var param = function() {\n        return {\n            value: 1,\n            defaultValue: 1,\n            linearRampToValueAtTime: fn,\n            setValueAtTime: fn,\n            exponentialRampToValueAtTime: fn,\n            setTargetAtTime: fn,\n            setValueCurveAtTime: fn,\n            cancelScheduledValues: fn\n        };\n    };\n\n    var fakeNode = function() {\n        return {\n            connect:fn,\n            disconnect:fn,\n            // analyser\n            frequencyBinCount: 0,\n            smoothingTimeConstant: 0,\n            fftSize: 0,\n            minDecibels: 0,\n            maxDecibels: 0,\n            getByteTimeDomainData: fn,\n            getByteFrequencyData: fn,\n            getFloatTimeDomainData: fn,\n            getFloatFrequencyData: fn,\n            // gain\n            gain: param(),\n            // panner\n            panningModel: 0,\n            setPosition: fn,\n            setOrientation: fn,\n            setVelocity: fn,\n            distanceModel: 0,\n            refDistance: 0,\n            maxDistance: 0,\n            rolloffFactor: 0,\n            coneInnerAngle: 360,\n            coneOuterAngle: 360,\n            coneOuterGain: 0,\n            // filter:\n            type:0,\n            frequency: param(),\n            // delay\n            delayTime: param(),\n            // convolver\n            buffer: 0,\n            // compressor\n            threshold: param(),\n            knee: param(),\n            ratio: param(),\n            attack: param(),\n            release: param(),\n            reduction: param(),\n            // distortion\n            oversample: 0,\n            curve: 0,\n            // buffer\n            sampleRate: 1,\n            length: 0,\n            duration: 0,\n            numberOfChannels: 0,\n            getChannelData: function() {\n                return [];\n            },\n            copyFromChannel: fn,\n            copyToChannel: fn,\n            // listener\n            dopplerFactor: 0,\n            speedOfSound: 0,\n            // osc\n            start: fn\n        };\n    };\n\n    // ie9\n    if(!window.Uint8Array) {\n        window.Int8Array =\n        window.Uint8Array =\n        window.Uint8ClampedArray =\n        window.Int16Array =\n        window.Uint16Array =\n        window.Int32Array =\n        window.Uint32Array =\n        window.Float32Array =\n        window.Float64Array = Array;\n    }\n\n    return {\n        createAnalyser: fakeNode,\n        createBuffer: fakeNode,\n        createBiquadFilter: fakeNode,\n        createChannelMerger: fakeNode,\n        createChannelSplitter: fakeNode,\n        createDynamicsCompressor: fakeNode,\n        createConvolver: fakeNode,\n        createDelay: fakeNode,\n        createGain: fakeNode,\n        createOscillator: fakeNode,\n        createPanner: fakeNode,\n        createScriptProcessor: fakeNode,\n        createWaveShaper: fakeNode,\n        listener: fakeNode(),\n        get currentTime() {\n            return (Date.now() - startTime) / 1000;\n        }\n    };\n}\n\nmodule.exports = FakeContext;\n","'use strict';\n\nfunction Filter(context, type, frequency, quality, gain) {\n    // Frequency between 40Hz and half of the sampling rate\n    var minFrequency = 40;\n    var maxFrequency = context.sampleRate / 2;\n\n    var node = context.createBiquadFilter();\n    node.type = type;\n\n    if(frequency !== undefined) { node.frequency.value = frequency; }\n    if(quality !== undefined) { node.Q.value = quality; }\n    if(gain !== undefined) { node.gain.value = gain; }\n\n\n    var getFrequency = function(value) {\n        // Logarithm (base 2) to compute how many octaves fall in the range.\n        var numberOfOctaves = Math.log(maxFrequency / minFrequency) / Math.LN2;\n        // Compute a multiplier from 0 to 1 based on an exponential scale.\n        var multiplier = Math.pow(2, numberOfOctaves * (value - 1.0));\n        // Get back to the frequency value between min and max.\n        return maxFrequency * multiplier;\n    };\n\n    node.update = function(frequency, gain) {\n        if(frequency !== undefined) {\n            this.frequency.value = frequency;\n        }\n        if(gain !== undefined) {\n            this.gain.value = gain;\n        }\n    };\n\n    node.setByPercent = function(percent, quality, gain) {\n        // set filter frequency based on value from 0 to 1\n        node.frequency.value = getFrequency(percent);\n        if(quality !== undefined) { node.Q.value = quality; }\n        if(gain !== undefined) { node.gain.value = gain; }\n    };\n\n    return node;\n}\n\nmodule.exports = Filter;\n","'use strict';\n\nfunction MonoFlanger(context, config) {\n    var feedbackGain = config.feedback || 0.5,\n        delayTime = config.delay || 0.005,\n        lfoGain = config.gain || 0.002,\n        lfoFreq = config.frequency || 0.25;\n\n    var input = context.createGain();\n    var delay = context.createDelay();\n    var feedback = context.createGain();\n    var lfo = context.createOscillator();\n    var gain = context.createGain();\n    var output = context.createGain();\n\n    delay.delayTime.value = delayTime; // 5-25ms delay (0.005 > 0.025)\n    feedback.gain.value = feedbackGain; // 0 > 1\n\n    lfo.type = 'sine';\n    lfo.frequency.value = lfoFreq; // 0.05 > 5\n    gain.gain.value = lfoGain; // 0.0005 > 0.005\n\n    input.connect(output);\n    input.connect(delay);\n    delay.connect(output);\n    delay.connect(feedback);\n    feedback.connect(input);\n\n    lfo.connect(gain);\n    gain.connect(delay.delayTime);\n    lfo.start(0);\n    \n    var node = input;\n    node.name = 'Flanger';\n    node._output = output;\n    \n    Object.defineProperties(node, {\n        delay: {\n            get: function() { return delay.delayTime.value; },\n            set: function(value) { delay.delayTime.value = value; }\n        },\n        lfoFrequency: {\n            get: function() { return lfo.frequency.value; },\n            set: function(value) { lfo.frequency.value = value; }\n        },\n        lfoGain: {\n            get: function() { return gain.gain.value; },\n            set: function(value) { gain.gain.value = value; }\n        },\n        feedback: {\n            get: function() { return feedback.gain.value; },\n            set: function(value) { feedback.gain.value = value; }\n        }\n    });\n\n    return node;\n}\n\nfunction StereoFlanger(context, config) {\n    var feedbackGain = config.feedback || 0.5,\n        delayTime = config.delay || 0.003,\n        lfoGain = config.gain || 0.005,\n        lfoFreq = config.frequency || 0.5;\n\n    var input = context.createGain();\n    var splitter = context.createChannelSplitter(2);\n    var merger = context.createChannelMerger(2);\n    var feedbackL = context.createGain();\n    var feedbackR = context.createGain();\n    var lfo = context.createOscillator();\n    var lfoGainL = context.createGain();\n    var lfoGainR = context.createGain();\n    var delayL = context.createDelay();\n    var delayR = context.createDelay();\n    var output = context.createGain();\n\n    feedbackL.gain.value = feedbackR.gain.value = feedbackGain;\n    delayL.delayTime.value = delayR.delayTime.value = delayTime;\n\n    lfo.type = 'sine';\n    lfo.frequency.value = lfoFreq;\n    lfoGainL.gain.value = lfoGain;\n    lfoGainR.gain.value = 0 - lfoGain;\n\n    input.connect(splitter);\n    \n    splitter.connect(delayL, 0);\n    splitter.connect(delayR, 1);\n    \n    delayL.connect(feedbackL);\n    delayR.connect(feedbackR);\n\n    feedbackL.connect(delayR);\n    feedbackR.connect(delayL);\n\n    delayL.connect(merger, 0, 0);\n    delayR.connect(merger, 0, 1);\n\n    merger.connect(output);\n    input.connect(output);\n\n    lfo.connect(lfoGainL);\n    lfo.connect(lfoGainR);\n    lfoGainL.connect(delayL.delayTime);\n    lfoGainR.connect(delayR.delayTime);\n    lfo.start(0);\n\n    var node = input;\n    node.name = 'StereoFlanger';\n    node._output = output;\n\n    Object.defineProperties(node, {\n        delay: {\n            get: function() { return delayL.delayTime.value; },\n            set: function(value) { delayL.delayTime.value = delayR.delayTime.value = value; }\n        },\n        lfoFrequency: {\n            get: function() { return lfo.frequency.value; },\n            set: function(value) { lfo.frequency.value = value; }\n        },\n        lfoGain: {\n            get: function() { return lfoGainL.gain.value; },\n            set: function(value) { lfoGainL.gain.value = lfoGainR.gain.value = value; }\n        },\n        feedback: {\n            get: function() { return feedbackL.gain.value; },\n            set: function(value) { feedbackL.gain.value = feedbackR.gain.value = value; }\n        }\n    });\n\n    return node;\n}\n\nfunction Flanger(context, config) {\n    config = config || {};\n    return config.stereo ? new StereoFlanger(context, config) : new MonoFlanger(context, config);\n}\n\nmodule.exports = Flanger;\n","'use strict';\n\nfunction Panner(context) {\n    var node = context.createPanner();\n    // Default for stereo is 'HRTF' can also be 'equalpower'\n    node.panningModel = Panner.defaults.panningModel;\n\n    // Distance model and attributes\n    // Can be 'linear' 'inverse' 'exponential'\n    node.distanceModel = Panner.defaults.distanceModel;\n    node.refDistance = Panner.defaults.refDistance;\n    node.maxDistance = Panner.defaults.maxDistance;\n    node.rolloffFactor = Panner.defaults.rolloffFactor;\n    node.coneInnerAngle = Panner.defaults.coneInnerAngle;\n    node.coneOuterAngle = Panner.defaults.coneOuterAngle;\n    node.coneOuterGain = Panner.defaults.coneOuterGain;\n    // set to defaults (needed in Firefox)\n    node.setPosition(0, 0, 0);\n    node.setOrientation(0, 0, 0);\n\n    // simple vec3 object pool\n    var VecPool = {\n        pool: [],\n        get: function(x, y, z) {\n            var v = this.pool.length ? this.pool.pop() : { x: 0, y: 0, z: 0 };\n            // check if a vector has been passed in\n            if(x !== undefined && isNaN(x) && 'x' in x && 'y' in x && 'z' in x) {\n                v.x = x.x || 0;\n                v.y = x.y || 0;\n                v.z = x.z || 0;\n            }\n            else {\n                v.x = x || 0;\n                v.y = y || 0;\n                v.z = z || 0;\n            }\n            return v;\n        },\n        dispose: function(instance) {\n            this.pool.push(instance);\n        }\n    };\n\n    var globalUp = VecPool.get(0, 1, 0);\n\n    var setOrientation = function(node, fw) {\n        // set the orientation of the source (where the audio is coming from)\n\n        // calculate up vec ( up = (forward cross (0, 1, 0)) cross forward )\n        var up = VecPool.get(fw.x, fw.y, fw.z);\n        cross(up, globalUp);\n        cross(up, fw);\n        normalize(up);\n        normalize(fw);\n        // set the audio context's listener position to match the camera position\n        node.setOrientation(fw.x, fw.y, fw.z, up.x, up.y, up.z);\n\n        // return the vecs to the pool\n        VecPool.dispose(fw);\n        VecPool.dispose(up);\n    };\n\n    var setPosition = function(node, vec) {\n        node.setPosition(vec.x, vec.y, vec.z);\n        VecPool.dispose(vec);\n    };\n\n    var setVelocity = function(node, vec) {\n        node.setVelocity(vec.x, vec.y, vec.z);\n        VecPool.dispose(vec);\n    };\n\n    // cross product of 2 vectors\n    var cross = function ( a, b ) {\n        var ax = a.x, ay = a.y, az = a.z;\n        var bx = b.x, by = b.y, bz = b.z;\n        a.x = ay * bz - az * by;\n        a.y = az * bx - ax * bz;\n        a.z = ax * by - ay * bx;\n    };\n\n    // normalise to unit vector\n    var normalize = function (vec3) {\n        if(vec3.x === 0 && vec3.y === 0 && vec3.z === 0) {\n            return vec3;\n        }\n        var length = Math.sqrt( vec3.x * vec3.x + vec3.y * vec3.y + vec3.z * vec3.z );\n        var invScalar = 1 / length;\n        vec3.x *= invScalar;\n        vec3.y *= invScalar;\n        vec3.z *= invScalar;\n        return vec3;\n    };\n\n    // pan left to right with value from -1 to 1\n    // creates a nice curve with z\n    node.setX = function(value) {\n        var deg45 = Math.PI / 4,\n            deg90 = deg45 * 2,\n            x = value * deg45,\n            z = x + deg90;\n\n        if (z > deg90) {\n            z = Math.PI - z;\n        }\n\n        x = Math.sin(x);\n        z = Math.sin(z);\n\n        node.setPosition(x, 0, z);\n    };\n\n    /*var x = 0,\n        y = 0,\n        z = 0;\n\n    Object.defineProperties(node, {\n        'x': {\n            get: function() { return x; },\n            set: function(value) {\n                x = value;\n                node.setPosition(x, y, z);\n            }\n        }\n    });*/\n\n    // set the position the audio is coming from)\n    node.setSourcePosition = function(x, y, z) {\n        setPosition(node, VecPool.get(x, y, z));\n    };\n\n    // set the direction the audio is coming from)\n    node.setSourceOrientation = function(x, y, z) {\n        setOrientation(node, VecPool.get(x, y, z));\n    };\n\n    // set the veloicty of the audio source (if moving)\n    node.setSourceVelocity = function(x, y, z) {\n        setVelocity(node, VecPool.get(x, y, z));\n    };\n\n    // set the position of who or what is hearing the audio (could be camera or some character)\n    node.setListenerPosition = function(x, y, z) {\n        setPosition(context.listener, VecPool.get(x, y, z));\n    };\n\n    // set the position of who or what is hearing the audio (could be camera or some character)\n    node.setListenerOrientation = function(x, y, z) {\n        setOrientation(context.listener, VecPool.get(x, y, z));\n    };\n\n    // set the velocity (if moving) of who or what is hearing the audio (could be camera or some character)\n    node.setListenerVelocity = function(x, y, z) {\n        setVelocity(context.listener, VecPool.get(x, y, z));\n    };\n\n    // helper to calculate velocity\n    node.calculateVelocity = function(currentPosition, lastPosition, deltaTime) {\n        var dx = currentPosition.x - lastPosition.x;\n        var dy = currentPosition.y - lastPosition.y;\n        var dz = currentPosition.z - lastPosition.z;\n        return VecPool.get(dx / deltaTime, dy / deltaTime, dz / deltaTime);\n    };\n\n    node.setDefaults = function(defaults) {\n        Object.keys(defaults).forEach(function(key) {\n            Panner.defaults[key] = defaults[key];\n        });\n    };\n\n    return node;\n}\n\nPanner.defaults = {\n    panningModel: 'HRTF',\n    distanceModel: 'linear',\n    refDistance: 1,\n    maxDistance: 1000,\n    rolloffFactor: 1,\n    coneInnerAngle: 360,\n    coneOuterAngle: 0,\n    coneOuterGain: 0\n};\n\nmodule.exports = Panner;\n","'use strict';\n\nfunction Phaser(context, config) {\n    config = config || {};\n    var stages = config.stages || 8,\n        lfoFrequency = config.frequency || 0.5,\n        lfoGainValue = config.gain || 300,\n        feedbackGain = config.feedback || 0.5,\n        filters = [],\n        filter;\n\n    var input = context.createGain();\n    var feedback = context.createGain();\n    var lfo = context.createOscillator();\n    var lfoGain = context.createGain();\n    var output = context.createGain();\n\n    feedback.gain.value = feedbackGain;\n\n    lfo.type = 'sine';\n    lfo.frequency.value = lfoFrequency;\n    lfoGain.gain.value = lfoGainValue;\n\n    for (var i = 0; i < stages; i++) {\n        filter = context.createBiquadFilter();\n        filter.type = 'allpass';\n        filter.frequency.value = 1000 * i;\n        //filter.Q.value = 10;\n        if(i > 0) {\n            filters[i-1].connect(filter);\n        }\n        lfoGain.connect(filter.frequency);\n\n        filters.push(filter);\n    }\n\n    var first = filters[0];\n    var last = filters[filters.length - 1];\n\n    input.connect(first);\n    input.connect(output);\n    last.connect(output);\n    last.connect(feedback);\n    feedback.connect(first);\n    lfo.connect(lfoGain);\n    lfo.start(0);\n\n    var node = input;\n    node.name = 'Phaser';\n    node._output = output;\n\n    Object.defineProperties(node, {\n        lfoFrequency: {\n            get: function() { return lfo.frequency.value; },\n            set: function(value) { lfo.frequency.value = value; }\n        },\n        lfoGain: {\n            get: function() { return lfoGain.gain.value; },\n            set: function(value) { lfoGain.gain.value = value; }\n        },\n        feedback: {\n            get: function() { return feedback.gain.value; },\n            set: function(value) { feedback.gain.value = value; }\n        }\n    });\n\n    return node;\n}\n\nmodule.exports = Phaser;\n","'use strict';\n\nfunction Recorder(context, passThrough) {\n    var buffersL = [],\n        buffersR = [],\n        startedAt = 0,\n        stoppedAt = 0;\n\n    var input = context.createGain();\n    var output = context.createGain();\n    var script = context.createScriptProcessor(4096, 2, 2);\n    \n    input.connect(script);\n    script.connect(context.destination);\n    script.connect(output);\n\n    var node = input;\n    node.name = 'Recorder';\n    node._output = output;\n\n    node.isRecording = false;\n\n    var getBuffer = function() {\n        if(!buffersL.length) {\n            return context.createBuffer(2, 4096, context.sampleRate);\n        }\n        var buffer = context.createBuffer(2, buffersL.length, context.sampleRate);\n        buffer.getChannelData(0).set(buffersL);\n        buffer.getChannelData(1).set(buffersR);\n        return buffer;\n    };\n\n    node.start = function() {\n        buffersL.length = 0;\n        buffersR.length = 0;\n        startedAt = context.currentTime;\n        stoppedAt = 0;\n        this.isRecording = true;\n    };\n\n    node.stop = function() {\n        stoppedAt = context.currentTime;\n        this.isRecording = false;\n        return getBuffer();\n    };\n\n    node.getDuration = function() {\n        if(!this.isRecording) {\n            return stoppedAt - startedAt;\n        }\n        return context.currentTime - startedAt;\n    };\n\n    script.onaudioprocess = function (event) {\n        var inputL = event.inputBuffer.getChannelData(0),\n            inputR = event.inputBuffer.getChannelData(0),\n            outputL = event.outputBuffer.getChannelData(0),\n            outputR = event.outputBuffer.getChannelData(0);\n\n        if(passThrough) {\n            outputL.set(inputL);\n            outputR.set(inputR);\n        }\n\n        if(node.isRecording) {\n            for (var i = 0; i < inputL.length; i++) {\n                buffersL.push(inputL[i]);\n                buffersR.push(inputR[i]);\n            }\n        }\n    };\n\n    return node;\n}\n\nmodule.exports = Recorder;\n","'use strict';\n\nfunction Reverb(context, config) {\n    config = config || {};\n\n    var time = config.time || 1,\n        decay = config.decay || 5,\n        reverse = !!config.reverse,\n        rate = context.sampleRate,\n        length,\n        impulseResponse;\n\n    var input = context.createGain();\n    var reverb = context.createConvolver();\n    var output = context.createGain();\n\n    input.connect(reverb);\n    input.connect(output);\n    reverb.connect(output);\n\n    var node = input;\n    node.name = 'Reverb';\n    node._output = output;\n\n    node.update = function(config) {\n        if(config.time !== undefined) {\n            time = config.time;\n            length = rate * time;\n            impulseResponse = context.createBuffer(2, length, rate);\n        }\n        if(config.decay !== undefined) {\n            decay = config.decay;\n        }\n        if(config.reverse !== undefined) {\n            reverse = config.reverse;\n        }\n\n        var left = impulseResponse.getChannelData(0),\n            right = impulseResponse.getChannelData(1),\n            n, e;\n\n        for (var i = 0; i < length; i++) {\n            n = reverse ? length - i : i;\n            e = Math.pow(1 - n / length, decay);\n            left[i] = (Math.random() * 2 - 1) * e;\n            right[i] = (Math.random() * 2 - 1) * e;\n        }\n\n        reverb.buffer = impulseResponse;\n    };\n\n    node.update({\n        time: time,\n        decay: decay,\n        reverse: reverse\n    });\n\n    Object.defineProperties(node, {\n        time: {\n            get: function() { return time; },\n            set: function(value) {\n                console.log('set time:', value);\n                if(value === time) { return; }\n                this.update({time: time});\n            }\n        },\n        decay: {\n            get: function() { return decay; },\n            set: function(value) {\n                if(value === decay) { return; }\n                this.update({decay: decay});\n            }\n        },\n        reverse: {\n            get: function() { return reverse; },\n            set: function(value) {\n                if(value === reverse) { return; }\n                this.update({reverse: !!value});\n            }\n        }\n    });\n\n    return node;\n}\n\nmodule.exports = Reverb;\n","'use strict';\n\nvar Effect = require('./effect.js');\n\nfunction Group(context, destination) {\n    this._sounds = [];\n    this._context = context;\n    this._effect = new Effect(this._context);\n    this._gain = this._effect.gain();\n    if(this._context) {\n        this._effect.setSource(this._gain);\n        this._effect.setDestination(destination || this._context.destination);\n    }\n}\n\n/*\n * Add / remove\n */\n\nGroup.prototype.add = function(sound) {\n    sound.gain.disconnect();\n    sound.gain.connect(this._gain);\n\n    this._sounds.push(sound);\n};\n\nGroup.prototype.remove = function(soundOrId) {\n    this._sounds.some(function(sound, index, sounds) {\n        if(sound === soundOrId || sound.id === soundOrId) {\n            sounds.splice(index, 1);\n            return true;\n        }\n    });\n};\n\n/*\n * Controls\n */\n\nGroup.prototype.play = function(delay, offset) {\n    this._sounds.forEach(function(sound) {\n        sound.play(delay, offset);\n    });\n};\n\nGroup.prototype.pause = function() {\n    this._sounds.forEach(function(sound) {\n        if(sound.playing) {\n            sound.pause();\n        }\n    });\n};\n\nGroup.prototype.resume = function() {\n    this._sounds.forEach(function(sound) {\n        if(sound.paused) {\n            sound.play();\n        }\n    });\n};\n\nGroup.prototype.stop = function() {\n    this._sounds.forEach(function(sound) {\n        sound.stop();\n    });\n};\n\nGroup.prototype.seek = function(percent) {\n    this._sounds.forEach(function(sound) {\n        sound.seek(percent);\n    });\n};\n\nGroup.prototype.mute = function() {\n    this._preMuteVolume = this.volume;\n    this.volume = 0;\n};\n\nGroup.prototype.unMute = function() {\n    this.volume = this._preMuteVolume || 1;\n};\n\nObject.defineProperty(Group.prototype, 'volume', {\n    get: function() {\n        return this._gain.gain.value;\n    },\n    set: function(value) {\n        if(isNaN(value)) { return; }\n\n        if(this._context) {\n            this._gain.gain.cancelScheduledValues(this._context.currentTime);\n            this._gain.gain.value = value;\n            this._gain.gain.setValueAtTime(value, this._context.currentTime);\n        }\n        else {\n            this._gain.gain.value = value;\n        }\n        this._sounds.forEach(function(sound) {\n            if (!sound.context) {\n                sound.volume = value;\n            }\n        });\n    }\n});\n\nGroup.prototype.fade = function(volume, duration) {\n    if(this._context) {\n        var param = this._gain.gain;\n        var time = this._context.currentTime;\n\n        param.cancelScheduledValues(time);\n        param.setValueAtTime(param.value, time);\n        // param.setValueAtTime(volume, time + duration);\n        param.linearRampToValueAtTime(volume, time + duration);\n        // param.setTargetAtTime(volume, time, duration);\n        // param.exponentialRampToValueAtTime(Math.max(volume, 0.0001), time + duration);\n    }\n    else {\n        this._sounds.forEach(function(sound) {\n            sound.fade(volume, duration);\n        });\n    }\n\n    return this;\n};\n\n/*\n * Destroy\n */\n\nGroup.prototype.destroy = function() {\n    while(this._sounds.length) {\n        this._sounds.pop().destroy();\n    }\n};\n\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(Group.prototype, {\n    'effect': {\n        get: function() {\n            return this._effect;\n        }\n    },\n    'gain': {\n        get: function() {\n            return this._gain;\n        }\n    },\n    'sounds': {\n        get: function() {\n            return this._sounds;\n        }\n    }\n});\n\nmodule.exports = Group;\n","'use strict';\n\nvar BufferSource = require('./source/buffer-source.js'),\n    Effect = require('./effect.js'),\n    Emitter = require('./utils/emitter.js'),\n    File = require('./utils/file.js'),\n    Loader = require('./utils/loader.js'),\n    MediaSource = require('./source/media-source.js'),\n    MicrophoneSource = require('./source/microphone-source.js'),\n    OscillatorSource = require('./source/oscillator-source.js'),\n    ScriptSource = require('./source/script-source.js');\n\nfunction Sound(context, destination) {\n    this.id = '';\n    this._context = context;\n    this._data = null;\n    // this._endedCallback = null;\n    this._isTouchLocked = false;\n    this._loader = null;\n    this._loop = false;\n    this._pausedAt = 0;\n    this._playbackRate = 1;\n    this._playWhenReady = null;\n    this._source = null;\n    this._startedAt = 0;\n\n    this._effect = new Effect(this._context);\n    this._gain = this._effect.gain();\n    if(this._context) {\n        this._effect.setDestination(this._gain);\n        this._gain.connect(destination || this._context.destination);\n    }\n}\n\nSound.prototype = Object.create(Emitter.prototype);\nSound.prototype.constructor = Sound;\n\n/*\n * Load\n */\n\nSound.prototype.load = function(config) {\n    var url = File.getSupportedFile(config.url || config);\n\n    if(this._source && this._source._el) {\n        this._source.load(url);\n    }\n    else {\n        this._loader = this._loader || new Loader(url);\n        this._loader.audioContext = !!config.asMediaElement ? null : this._context;\n        this._loader.isTouchLocked = this._isTouchLocked;\n        var self = this;\n        this._loader.once('loaded', function(data) {\n            self.data = data;\n            self = null;\n        });\n    }\n    return this;\n};\n\n/*\n * Controls\n */\n\nSound.prototype.play = function(delay, offset) {\n    if(!this._source || this._isTouchLocked) {\n        this._playWhenReady = function() {\n            this.play(delay, offset);\n        }.bind(this);\n        return this;\n    }\n    this._playWhenReady = null;\n    this._effect.setSource(this._source.sourceNode);\n    this._source.loop = this._loop;\n\n    // update volume needed for no webaudio\n    if(!this._context) { this.volume = this._gain.gain.value; }\n\n    this._source.play(delay, offset);\n\n    return this;\n};\n\nSound.prototype.pause = function() {\n    if(!this._source) { return this; }\n    this._source.pause();\n    return this;\n};\n\nSound.prototype.stop = function() {\n    if(!this._source) { return this; }\n    this._source.stop();\n    return this;\n};\n\nSound.prototype.seek = function(percent) {\n    if(!this._source) { return this; }\n    this.stop();\n    this.play(0, this._source.duration * percent);\n    return this;\n};\n\nSound.prototype.fade = function(volume, duration) {\n    if(!this._source) { return this; }\n\n    if(this._context) {\n        var  param = this._gain.gain;\n        var time = this._context.currentTime;\n        param.cancelScheduledValues(time);\n        param.setValueAtTime(param.value, time);\n        param.linearRampToValueAtTime(volume, time + duration);\n    }\n    else if(typeof this._source.fade === 'function') {\n        this._source.fade(volume, duration);\n    }\n\n    return this;\n};\n\n/*\n * Destroy\n */\n\nSound.prototype.destroy = function() {\n    if(this._source) { this._source.destroy(); }\n    if(this._effect) { this._effect.destroy(); }\n    if(this._gain) { this._gain.disconnect(); }\n    this._gain = null;\n    this._context = null;\n    this._data = null;\n    // this._endedCallback = null;\n    this.removeAllListeners('ended');\n    this._playWhenReady = null;\n    this._source = null;\n    this._effect = null;\n    if(this._loader) {\n        this._loader.destroy();\n        this._loader = null;\n    }\n};\n\n/*\n * Create source\n */\n\nSound.prototype._createSource = function(data) {\n    // if (this._source && File.type(data) === this._source.type) {\n    //     this._source.data = data;\n    // } else\n    if(File.isAudioBuffer(data)) {\n        this._source = new BufferSource(data, this._context);\n    }\n    else if(File.isMediaElement(data)) {\n        this._source = new MediaSource(data, this._context);\n    }\n    else if(File.isMediaStream(data)) {\n        this._source = new MicrophoneSource(data, this._context);\n    }\n    else if(File.isOscillatorType(data)) {\n        this._source = new OscillatorSource(data, this._context);\n    }\n    else if(File.isScriptConfig(data)) {\n        this._source = new ScriptSource(data, this._context);\n    }\n    else {\n        throw new Error('Cannot detect data type: ' + data);\n    }\n\n    this._effect.setSource(this._source.sourceNode);\n\n    if(this._source.hasOwnProperty('_endedCallback')) {\n        this._source._endedCallback = function() {\n            this.emit('ended');\n        }.bind(this);\n    }\n\n    if(this._playWhenReady) {\n        this._playWhenReady();\n    }\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(Sound.prototype, {\n    'context': {\n        get: function() {\n            return this._context;\n        }\n    },\n    'currentTime': {\n        get: function() {\n            return this._source ? this._source.currentTime : 0;\n        },\n        set: function(value) {\n            this.stop();\n            this.play(0, value);\n        }\n    },\n    'data': {\n        get: function() {\n            return this._data;\n        },\n        set : function(value) {\n            if(!value) { return; }\n            this._data = value;\n            this._createSource(this._data);\n        }\n    },\n    'duration': {\n        get: function() {\n            return this._source ? this._source.duration : 0;\n        }\n    },\n    'effect': {\n        get: function() {\n            return this._effect;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._source ? this._source.ended : false;\n        }\n    },\n    'frequency': {\n        get: function() {\n            return this._source ? this._source.frequency : 0;\n        },\n        set: function(value) {\n            if(this._source) {\n                this._source.frequency = value;\n            }\n        }\n    },\n    'gain': {\n        get: function() {\n            return this._gain;\n        }\n    },\n    'isTouchLocked': {\n        set: function(value) {\n            this._isTouchLocked = value;\n            if(!value && this._playWhenReady) {\n                this._playWhenReady();\n            }\n        }\n    },\n    'loader': {\n        get: function() {\n            return this._loader;\n        }\n    },\n    'loop': {\n        get: function() {\n            return this._loop;\n        },\n        set: function(value) {\n            this._loop = !!value;\n            if(this._source) {\n              this._source.loop = this._loop;\n            }\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._source ? this._source.paused : false;\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._source ? this._source.playing : false;\n        }\n    },\n    'playbackRate': {\n        get: function() {\n            return this._playbackRate;\n        },\n        set: function(value) {\n            this._playbackRate = value;\n            if(this._source) {\n              this._source.playbackRate = this._playbackRate;\n            }\n        }\n    },\n    'progress': {\n        get: function() {\n            return this._source ? this._source.progress : 0;\n        }\n    },\n    'volume': {\n        get: function() {\n            if(this._context) {\n                return this._gain.gain.value;\n            }\n            else if(this._data && this._data.volume !== undefined) {\n                return this._data.volume;\n            }\n            return 1;\n        },\n        set: function(value) {\n            if(isNaN(value)) { return; }\n\n            var param = this._gain.gain;\n\n            if(this._context) {\n                var time = this._context.currentTime;\n                param.cancelScheduledValues(time);\n                param.value = value;\n                param.setValueAtTime(value, time);\n            }\n            else {\n                param.value = value;\n                if(this._source) {\n                    window.clearTimeout(this._source.fadeTimeout);\n                }\n                if(this._data && this._data.volume !== undefined) {\n                    this._data.volume = value;\n                }\n            }\n        }\n    }\n});\n\nmodule.exports = Sound;\n","'use strict';\n\nfunction BufferSource(buffer, context) {\n    this.id = '';\n    this._buffer = buffer; // ArrayBuffer\n    this._context = context;\n    this._ended = false;\n    this._endedCallback = null;\n    this._loop = false;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playbackRate = 1;\n    this._playing = false;\n    this._sourceNode = null; // BufferSourceNode\n    this._startedAt = 0;\n}\n\n/*\n * Controls\n */\n\nBufferSource.prototype.play = function(delay, offset) {\n    if(this._playing) { return; }\n    if(delay === undefined) { delay = 0; }\n    if(delay > 0) { delay = this._context.currentTime + delay; }\n\n    if(offset === undefined) { offset = 0; }\n    if(offset > 0) { this._pausedAt = 0; }\n    if(this._pausedAt > 0) { offset = this._pausedAt; }\n\n    //console.log.apply(console, ['1 offset:', offset]);\n    while(offset > this.duration) { offset = offset % this.duration; }\n    //console.log.apply(console, ['2 offset:', offset]);\n\n    this.sourceNode.loop = this._loop;\n    this.sourceNode.onended = this._endedHandler.bind(this);\n    this.sourceNode.start(delay, offset);\n    this.sourceNode.playbackRate.value = this._playbackRate;\n\n    if(this._pausedAt) {\n        this._startedAt = this._context.currentTime - this._pausedAt;\n    }\n    else {\n        this._startedAt = this._context.currentTime - offset;\n    }\n\n    this._ended = false;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = true;\n};\n\nBufferSource.prototype.pause = function() {\n    var elapsed = this._context.currentTime - this._startedAt;\n    this.stop();\n    this._pausedAt = elapsed;\n    this._playing = false;\n    this._paused = true;\n};\n\nBufferSource.prototype.stop = function() {\n    if(this._sourceNode) {\n        this._sourceNode.onended = null;\n        try {\n            this._sourceNode.disconnect();\n            this._sourceNode.stop(0);\n        } catch(e) {}\n        this._sourceNode = null;\n    }\n\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._startedAt = 0;\n};\n\n/*\n * Ended handler\n */\n\nBufferSource.prototype._endedHandler = function() {\n    this.stop();\n    this._ended = true;\n    if(typeof this._endedCallback === 'function') {\n        this._endedCallback(this);\n    }\n};\n\n/*\n * Destroy\n */\n\nBufferSource.prototype.destroy = function() {\n    this.stop();\n    this._buffer = null;\n    this._context = null;\n    this._endedCallback = null;\n    this._sourceNode = null;\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(BufferSource.prototype, {\n    'currentTime': {\n        get: function() {\n            if(this._pausedAt) {\n                return this._pausedAt;\n            }\n            if(this._startedAt) {\n                var time = this._context.currentTime - this._startedAt;\n                if(time > this.duration) {\n                    time = time % this.duration;\n                }\n                return time;\n            }\n            return 0;\n        }\n    },\n    'data': {\n        set: function(value) {\n            this._buffer = value;\n        }\n    },\n    'duration': {\n        get: function() {\n            return this._buffer ? this._buffer.duration : 0;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._ended;\n        }\n    },\n    'loop': {\n        get: function() {\n            return this._loop;\n        },\n        set: function(value) {\n            this._loop = !!value;\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._paused;\n        }\n    },\n    'playbackRate': {\n        get: function() {\n            return this._playbackRate;\n        },\n        set: function(value) {\n            this._playbackRate = value;\n            if(this._sourceNode) {\n                this._sourceNode.playbackRate.value = this._playbackRate;\n            }\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._playing;\n        }\n    },\n    'progress': {\n        get: function() {\n            return this.duration ? this.currentTime / this.duration : 0;\n        }\n    },\n    'sourceNode': {\n        get: function() {\n            if(!this._sourceNode) {\n                this._sourceNode = this._context.createBufferSource();\n                this._sourceNode.buffer = this._buffer;\n            }\n            return this._sourceNode;\n        }\n    }\n});\n\nmodule.exports = BufferSource;\n","'use strict';\n\nfunction MediaSource(el, context) {\n    this.id = '';\n    this._context = context;\n    this._el = el; // HTMLMediaElement\n    this._ended = false;\n    this._endedCallback = null;\n    this._loop = false;\n    this._paused = false;\n    this._playbackRate = 1;\n    this._playing = false;\n    this._sourceNode = null; // MediaElementSourceNode\n}\n\n/*\n * Load\n */\n\nMediaSource.prototype.load = function(url) {\n    this._el.src = url;\n    this._el.load();\n    this._ended = false;\n    this._paused = false;\n    this._playing = false;\n};\n\n/*\n * Controls\n */\n\nMediaSource.prototype.play = function(delay, offset) {\n    clearTimeout(this._delayTimeout);\n\n    this.playbackRate = this._playbackRate;\n\n    if(offset) {\n        this._el.currentTime = offset;\n    }\n\n    if(delay) {\n        this._delayTimeout = setTimeout(this.play.bind(this), delay);\n    }\n    else {\n        // this._el.load();\n        this._el.play();\n    }\n\n    this._ended = false;\n    this._paused = false;\n    this._playing = true;\n\n    this._el.removeEventListener('ended', this._endedHandlerBound);\n    this._el.addEventListener('ended', this._endedHandlerBound, false);\n\n    if(this._el.readyState < 4) {\n        this._el.removeEventListener('canplaythrough', this._readyHandlerBound);\n        this._el.addEventListener('canplaythrough', this._readyHandlerBound, false);\n        this._el.load();\n        this._el.play();\n    }\n};\n\nMediaSource.prototype.pause = function() {\n    clearTimeout(this._delayTimeout);\n\n    if(!this._el) { return; }\n\n    this._el.pause();\n    this._playing = false;\n    this._paused = true;\n};\n\nMediaSource.prototype.stop = function() {\n    clearTimeout(this._delayTimeout);\n\n    if(!this._el) { return; }\n\n    this._el.pause();\n\n    try {\n        this._el.currentTime = 0;\n        // fixes bug where server doesn't support seek:\n        if(this._el.currentTime > 0) { this._el.load(); }\n    } catch(e) {}\n\n    this._playing = false;\n    this._paused = false;\n};\n\n/*\n * Fade for no webaudio\n */\n\nMediaSource.prototype.fade = function(volume, duration) {\n    if(!this._el) { return this; }\n    if(this._context) { return this; }\n\n    var ramp = function(value, step, self) {\n        var el = self._el;\n        self.fadeTimeout = setTimeout(function() {\n            el.volume = el.volume + ( value - el.volume ) * 0.2;\n            if(Math.abs(el.volume - value) > 0.05) {\n                return ramp(value, step, self);\n            }\n            el.volume = value;\n        }, step * 1000);\n    };\n\n    window.clearTimeout(this.fadeTimeout);\n    ramp(volume, duration / 10, this);\n\n    return this;\n};\n\n/*\n * Ended handler\n */\n\nMediaSource.prototype._endedHandler = function() {\n    this._ended = true;\n    this._paused = false;\n    this._playing = false;\n\n    if(this._loop) {\n        this._el.currentTime = 0;\n        // fixes bug where server doesn't support seek:\n        if(this._el.currentTime > 0) { this._el.load(); }\n        this.play();\n    } else if(typeof this._endedCallback === 'function') {\n        this._endedCallback(this);\n    }\n};\n\nMediaSource.prototype._readyHandler = function() {\n    this._el.removeEventListener('canplaythrough', this._readyHandlerBound);\n    if(this._playing) {\n        this._el.play();\n    }\n};\n\n/*\n * Destroy\n */\n\nMediaSource.prototype.destroy = function() {\n    this._el.removeEventListener('ended', this._endedHandlerBound);\n    this._el.removeEventListener('canplaythrough', this._readyHandlerBound);\n    this.stop();\n    this._el = null;\n    this._context = null;\n    this._endedCallback = null;\n    this._sourceNode = null;\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(MediaSource.prototype, {\n    'currentTime': {\n        get: function() {\n            return this._el ? this._el.currentTime : 0;\n        }\n    },\n    'data': {\n        set: function(value) {\n            this._el = value;\n        }\n    },\n    'duration': {\n        get: function() {\n            return this._el ? this._el.duration : 0;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._ended;\n        }\n    },\n    'loop': {\n        get: function() {\n            return this._loop;\n        },\n        set: function(value) {\n            this._loop = !!value;\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._paused;\n        }\n    },\n    'playbackRate': {\n        get: function() {\n            return this._playbackRate;\n        },\n        set: function(value) {\n            this._playbackRate = value;\n            if(this._el) {\n                this._el.playbackRate = this._playbackRate;\n            }\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._playing;\n        }\n    },\n    'progress': {\n        get: function() {\n            return this.duration ? this.currentTime / this.duration : 0;\n        }\n    },\n    'sourceNode': {\n        get: function() {\n            if(!this._sourceNode && this._context) {\n                this._sourceNode = this._context.createMediaElementSource(this._el);\n            }\n            return this._sourceNode;\n        }\n    }\n});\n\nmodule.exports = MediaSource;\n","'use strict';\n\nfunction MicrophoneSource(stream, context) {\n    this.id = '';\n    this._context = context;\n    this._ended = false;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._sourceNode = null; // MicrophoneSourceNode\n    this._startedAt = 0;\n    this._stream = stream;\n}\n\n/*\n * Controls\n */\n\nMicrophoneSource.prototype.play = function(delay) {\n    if(delay === undefined) { delay = 0; }\n    if(delay > 0) { delay = this._context.currentTime + delay; }\n\n    this.sourceNode.start(delay);\n\n    if(this._pausedAt) {\n        this._startedAt = this._context.currentTime - this._pausedAt;\n    }\n    else {\n        this._startedAt = this._context.currentTime;\n    }\n\n    this._ended = false;\n    this._playing = true;\n    this._paused = false;\n    this._pausedAt = 0;\n};\n\nMicrophoneSource.prototype.pause = function() {\n    var elapsed = this._context.currentTime - this._startedAt;\n    this.stop();\n    this._pausedAt = elapsed;\n    this._playing = false;\n    this._paused = true;\n};\n\nMicrophoneSource.prototype.stop = function() {\n    if(this._sourceNode) {\n        try {\n            this._sourceNode.stop(0);\n        } catch(e) {}\n        this._sourceNode = null;\n    }\n    this._ended = true;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._startedAt = 0;\n};\n\n/*\n * Destroy\n */\n\nMicrophoneSource.prototype.destroy = function() {\n    this.stop();\n    this._context = null;\n    this._sourceNode = null;\n    this._stream = null;\n    window.mozHack = null;\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(MicrophoneSource.prototype, {\n    'currentTime': {\n        get: function() {\n            if(this._pausedAt) {\n                return this._pausedAt;\n            }\n            if(this._startedAt) {\n                return this._context.currentTime - this._startedAt;\n            }\n            return 0;\n        }\n    },\n    'duration': {\n        get: function() {\n            return 0;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._ended;\n        }\n    },\n    'frequency': {\n        get: function() {\n            return this._frequency;\n        },\n        set: function(value) {\n            this._frequency = value;\n            if(this._sourceNode) {\n                this._sourceNode.frequency.value = value;\n            }\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._paused;\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._playing;\n        }\n    },\n    'progress': {\n        get: function() {\n            return 0;\n        }\n    },\n    'sourceNode': {\n        get: function() {\n            if(!this._sourceNode) {\n                this._sourceNode = this._context.createMediaStreamSource(this._stream);\n                // HACK: stops moz garbage collection killing the stream\n                // see https://support.mozilla.org/en-US/questions/984179\n                if(navigator.mozGetUserMedia) {\n                    window.mozHack = this._sourceNode;\n                }\n            }\n            return this._sourceNode;\n        }\n    }\n});\n\nmodule.exports = MicrophoneSource;\n","'use strict';\n\nfunction OscillatorSource(type, context) {\n    this.id = '';\n    this._context = context;\n    this._ended = false;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._sourceNode = null; // OscillatorSourceNode\n    this._startedAt = 0;\n    this._type = type;\n    this._frequency = 200;\n}\n\n/*\n * Controls\n */\n\nOscillatorSource.prototype.play = function(delay) {\n    if(delay === undefined) { delay = 0; }\n    if(delay > 0) { delay = this._context.currentTime + delay; }\n\n    this.sourceNode.start(delay);\n\n    if(this._pausedAt) {\n        this._startedAt = this._context.currentTime - this._pausedAt;\n    }\n    else {\n        this._startedAt = this._context.currentTime;\n    }\n\n    this._ended = false;\n    this._playing = true;\n    this._paused = false;\n    this._pausedAt = 0;\n};\n\nOscillatorSource.prototype.pause = function() {\n    var elapsed = this._context.currentTime - this._startedAt;\n    this.stop();\n    this._pausedAt = elapsed;\n    this._playing = false;\n    this._paused = true;\n};\n\nOscillatorSource.prototype.stop = function() {\n    if(this._sourceNode) {\n        try {\n            this._sourceNode.stop(0);\n        } catch(e) {}\n        this._sourceNode = null;\n    }\n    this._ended = true;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._startedAt = 0;\n};\n\n/*\n * Destroy\n */\n\nOscillatorSource.prototype.destroy = function() {\n    this.stop();\n    this._context = null;\n    this._sourceNode = null;\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(OscillatorSource.prototype, {\n    'currentTime': {\n        get: function() {\n            if(this._pausedAt) {\n                return this._pausedAt;\n            }\n            if(this._startedAt) {\n                return this._context.currentTime - this._startedAt;\n            }\n            return 0;\n        }\n    },\n    'duration': {\n        get: function() {\n            return 0;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._ended;\n        }\n    },\n    'frequency': {\n        get: function() {\n            return this._frequency;\n        },\n        set: function(value) {\n            this._frequency = value;\n            if(this._sourceNode) {\n                this._sourceNode.frequency.value = value;\n            }\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._paused;\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._playing;\n        }\n    },\n    'progress': {\n        get: function() {\n            return 0;\n        }\n    },\n    'sourceNode': {\n        get: function() {\n            if(!this._sourceNode && this._context) {\n                this._sourceNode = this._context.createOscillator();\n                this._sourceNode.type = this._type;\n                this._sourceNode.frequency.value = this._frequency;\n            }\n            return this._sourceNode;\n        }\n    }\n});\n\nmodule.exports = OscillatorSource;\n","'use strict';\n\nfunction ScriptSource(data, context) {\n    this.id = '';\n    this._bufferSize = data.bufferSize || 1024;\n    this._channels = data.channels || 1;\n    this._context = context;\n    this._ended = false;\n    this._onProcess = data.callback.bind(data.thisArg || this);\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._sourceNode = null; // ScriptSourceNode\n    this._startedAt = 0;\n}\n\n/*\n * Controls\n */\n\nScriptSource.prototype.play = function(delay) {\n    if(delay === undefined) { delay = 0; }\n    if(delay > 0) { delay = this._context.currentTime + delay; }\n\n    this.sourceNode.onaudioprocess = this._onProcess;\n\n    if(this._pausedAt) {\n        this._startedAt = this._context.currentTime - this._pausedAt;\n    }\n    else {\n        this._startedAt = this._context.currentTime;\n    }\n\n    this._ended = false;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = true;\n};\n\nScriptSource.prototype.pause = function() {\n    var elapsed = this._context.currentTime - this._startedAt;\n    this.stop();\n    this._pausedAt = elapsed;\n    this._playing = false;\n    this._paused = true;\n};\n\nScriptSource.prototype.stop = function() {\n    if(this._sourceNode) {\n        this._sourceNode.onaudioprocess = this._onPaused;\n    }\n    this._ended = true;\n    this._paused = false;\n    this._pausedAt = 0;\n    this._playing = false;\n    this._startedAt = 0;\n};\n\nScriptSource.prototype._onPaused = function(event) {\n    var buffer = event.outputBuffer;\n    for (var i = 0, l = buffer.numberOfChannels; i < l; i++) {\n        var channel = buffer.getChannelData(i);\n        for (var j = 0, len = channel.length; j < len; j++) {\n            channel[j] = 0;\n        }\n    }\n};\n\n/*\n * Destroy\n */\n\nScriptSource.prototype.destroy = function() {\n    this.stop();\n    this._context = null;\n    this._onProcess = null;\n    this._sourceNode = null;\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(ScriptSource.prototype, {\n    'currentTime': {\n        get: function() {\n            if(this._pausedAt) {\n                return this._pausedAt;\n            }\n            if(this._startedAt) {\n                return this._context.currentTime - this._startedAt;\n            }\n            return 0;\n        }\n    },\n    'duration': {\n        get: function() {\n            return 0;\n        }\n    },\n    'ended': {\n        get: function() {\n            return this._ended;\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._paused;\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._playing;\n        }\n    },\n    'progress': {\n        get: function() {\n            return 0;\n        }\n    },\n    'sourceNode': {\n        get: function() {\n            if(!this._sourceNode && this._context) {\n                this._sourceNode = this._context.createScriptProcessor(this._bufferSize, 0, this._channels);\n            }\n            return this._sourceNode;\n        }\n    }\n});\n\nmodule.exports = ScriptSource;\n","'use strict';\n\nvar Browser = {};\n\nBrowser.handlePageVisibility = function(onHidden, onShown, thisArg) {\n    var hidden,\n        visibilityChange;\n\n    if (typeof document.hidden !== 'undefined') {\n        hidden = 'hidden';\n        visibilityChange = 'visibilitychange';\n    }\n    else if (typeof document.mozHidden !== 'undefined') {\n        hidden = 'mozHidden';\n        visibilityChange = 'mozvisibilitychange';\n    }\n    else if (typeof document.msHidden !== 'undefined') {\n        hidden = 'msHidden';\n        visibilityChange = 'msvisibilitychange';\n    }\n    else if (typeof document.webkitHidden !== 'undefined') {\n        hidden = 'webkitHidden';\n        visibilityChange = 'webkitvisibilitychange';\n    }\n\n    function onChange() {\n        if (document[hidden]) {\n            onHidden.call(thisArg);\n        }\n        else {\n            onShown.call(thisArg);\n        }\n    }\n\n    if(visibilityChange !== undefined) {\n        document.addEventListener(visibilityChange, onChange, false);\n    }\n};\n\nBrowser.handleTouchLock = function(onUnlock, thisArg) {\n    var ua = navigator.userAgent,\n        locked = !!ua.match(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|Windows Phone|SymbianOS/i);\n\n\n    var unlock = function() {\n        document.body.removeEventListener('touchstart', unlock);\n\n        if(this._context) {\n            var buffer = this._context.createBuffer(1, 1, 22050);\n            var unlockSource = this._context.createBufferSource();\n            unlockSource.buffer = buffer;\n            unlockSource.connect(this._context.destination);\n            unlockSource.start(0);\n        }\n\n        onUnlock.call(thisArg);\n\n    }.bind(this);\n\n    if(locked) {\n        document.body.addEventListener('touchstart', unlock, false);\n    }\n    return locked;\n};\n\nmodule.exports = Browser;\n","'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nfunction Emitter() {}\n\nEmitter.prototype = Object.create(EventEmitter.prototype);\nEmitter.prototype.constructor = Emitter;\n\nEmitter.prototype.off = function(type, listener) {\n    if (listener) {\n        return this.removeListener(type, listener);\n    }\n    return this.removeAllListeners(type);\n};\n\nmodule.exports = Emitter;\n","'use strict';\n\nvar File = {\n    extensions: [],\n    canPlay: {}\n};\n\n/*\n * Initial tests\n */\n\nvar tests = [\n    { ext: 'ogg', type: 'audio/ogg; codecs=\"vorbis\"' },\n    { ext: 'mp3', type: 'audio/mpeg;' },\n    { ext: 'opus', type: 'audio/ogg; codecs=\"opus\"' },\n    { ext: 'wav', type: 'audio/wav; codecs=\"1\"' },\n    { ext: 'm4a', type: 'audio/x-m4a;' },\n    { ext: 'm4a', type: 'audio/aac;' }\n];\n\nvar el = document.createElement('audio');\nif(el) {\n    tests.forEach(function(test) {\n        var canPlayType = !!el.canPlayType(test.type);\n        if(canPlayType) {\n            File.extensions.push(test.ext);\n        }\n        File.canPlay[test.ext] = canPlayType;\n    });\n}\n\n/*\n * find a supported file\n */\n\nFile.getFileExtension = function(url) {\n    // from DataURL\n    if(url.substr(0, 5) === 'data:') {\n        var match = url.match(/data:audio\\/(ogg|mp3|opus|wav|m4a)/i);\n        if(match && match.length > 1) {\n            return match[1].toLowerCase();\n        }\n    }\n    // from Standard URL\n    url = url.split('?')[0];\n    url = url.substr(url.lastIndexOf('/') + 1);\n\n    var a = url.split('.');\n    if(a.length === 1 || (a[0] === '' && a.length === 2)) {\n        return '';\n    }\n    return a.pop().toLowerCase();\n};\n\nFile.getSupportedFile = function(fileNames) {\n    var name;\n\n    if(Array.isArray(fileNames)) {\n        // if array get the first one that works\n        fileNames.some(function(item) {\n            name = item;\n            var ext = this.getFileExtension(item);\n            return this.extensions.indexOf(ext) > -1;\n        }, this);\n    }\n    else if(typeof fileNames === 'object') {\n        // if not array and is object\n        Object.keys(fileNames).some(function(key) {\n            name = fileNames[key];\n            var ext = this.getFileExtension(name);\n            return this.extensions.indexOf(ext) > -1;\n        }, this);\n    }\n    // if string just return\n    return name || fileNames;\n};\n\n/*\n * infer file types\n */\n\nFile.isAudioBuffer = function(data) {\n    return !!(data &&\n              window.AudioBuffer &&\n              data instanceof window.AudioBuffer);\n};\n\nFile.isMediaElement = function(data) {\n    return !!(data &&\n              window.HTMLMediaElement &&\n              data instanceof window.HTMLMediaElement);\n};\n\nFile.isMediaStream = function(data) {\n    return !!(data &&\n              typeof data.getAudioTracks === 'function' &&\n              data.getAudioTracks().length &&\n              window.MediaStreamTrack &&\n              data.getAudioTracks()[0] instanceof window.MediaStreamTrack);\n};\n\nFile.isOscillatorType = function(data) {\n    return !!(data && typeof data === 'string' &&\n             (data === 'sine' || data === 'square' ||\n              data === 'sawtooth' || data === 'triangle'));\n};\n\nFile.isScriptConfig = function(data) {\n    return !!(data && typeof data === 'object' &&\n              data.bufferSize && data.channels && data.callback);\n};\n\nFile.isURL = function(data) {\n    return !!(data && typeof data === 'string' &&\n             (data.indexOf('.') > -1 || data.substr(0, 5) === 'data:'));\n};\n\nFile.containsURL = function(config) {\n    if(!config) { return false; }\n    // string, array or object with url property that is string or array\n    var url = config.url || config;\n    return this.isURL(url) || (Array.isArray(url) && this.isURL(url[0]));\n};\n\nmodule.exports = File;\n","'use strict';\n\nvar Emitter = require('./emitter.js');\n\nfunction Loader(url) {\n    var emitter = new Emitter(),\n        progress = 0,\n        audioContext,\n        isTouchLocked,\n        request,\n        timeout,\n        data;\n\n    var start = function() {\n        if(audioContext) {\n            loadArrayBuffer();\n        } else {\n            loadAudioElement();\n        }\n    };\n\n    var dispatch = function(buffer) {\n        emitter.emit('progress', 1);\n        emitter.emit('loaded', buffer);\n        emitter.emit('complete', buffer);\n    };\n\n    var loadArrayBuffer = function() {\n        request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.responseType = 'arraybuffer';\n        request.onprogress = function(event) {\n            if (event.lengthComputable) {\n                progress = event.loaded / event.total;\n                // onProgress.dispatch(progress);\n                emitter.emit('progress', progress);\n            }\n        };\n        request.onload = function() {\n            audioContext.decodeAudioData(\n                request.response,\n                function(buffer) {\n                    data = buffer;\n                    request = null;\n                    progress = 1;\n                    dispatch(buffer);\n                },\n                function(e) {\n                    emitter.emit('error', e);\n                }\n            );\n        };\n        request.onerror = function(e) {\n            // onError.dispatch(e);\n            emitter.emit('error', e);\n        };\n        request.send();\n    };\n\n    var loadAudioElement = function() {\n        if(!data || !data.tagName) {\n            data = new Audio();\n        }\n\n        if(!isTouchLocked) {\n            // timeout because sometimes canplaythrough doesn't fire\n            window.clearTimeout(timeout);\n            timeout = window.setTimeout(readyHandler, 2000);\n            data.addEventListener('canplaythrough', readyHandler, false);\n        }\n\n        data.addEventListener('error', errorHandler, false);\n        data.preload = 'auto';\n        data.src = url;\n        data.load();\n\n        if (isTouchLocked) {\n            dispatch(data);\n        }\n    };\n\n    var errorHandler = function(e) {\n        window.clearTimeout(timeout);\n        emitter.emit('error', e);\n    };\n\n    var readyHandler = function() {\n        window.clearTimeout(timeout);\n        if(!data) { return; }\n        data.removeEventListener('canplaythrough', readyHandler);\n        progress = 1;\n        dispatch(data);\n    };\n\n    var cancel = function() {\n        if(request && request.readyState !== 4) {\n          request.abort();\n        }\n        if(data && typeof data.removeEventListener === 'function') {\n            data.removeEventListener('canplaythrough', readyHandler);\n        }\n        window.clearTimeout(timeout);\n\n        emitter.removeAllListeners('progress');\n        emitter.removeAllListeners('complete');\n        emitter.removeAllListeners('loaded');\n        emitter.removeAllListeners('error');\n    };\n\n    var destroy = function() {\n        cancel();\n        request = null;\n        data = null;\n        audioContext = null;\n    };\n\n    var load = function(newUrl) {\n        url = newUrl;\n        start();\n    };\n\n    var api = {\n        on: emitter.on.bind(emitter),\n        once: emitter.once.bind(emitter),\n        off: emitter.off.bind(emitter),\n        load: load,\n        start: start,\n        cancel: cancel,\n        destroy: destroy\n    };\n\n    Object.defineProperties(api, {\n        'data': {\n            get: function() {\n                return data;\n            }\n        },\n        'progress': {\n            get: function() {\n                return progress;\n            }\n        },\n        'audioContext': {\n            set: function(value) {\n                audioContext = value;\n            }\n        },\n        'isTouchLocked': {\n            set: function(value) {\n                isTouchLocked = value;\n            }\n        }\n    });\n\n    return Object.freeze(api);\n}\n\nLoader.Group = function() {\n    var emitter = new Emitter(),\n        queue = [],\n        numLoaded = 0,\n        numTotal = 0;\n\n    var add = function(loader) {\n        queue.push(loader);\n        numTotal++;\n        return loader;\n    };\n\n    var start = function() {\n        numTotal = queue.length;\n        next();\n    };\n\n    var next = function() {\n        if(queue.length === 0) {\n            emitter.emit('complete');\n            return;\n        }\n\n        var loader = queue.pop();\n        loader.on('progress', progressHandler);\n        loader.on('loaded', completeHandler);\n        loader.on('error', errorHandler);\n        loader.start();\n    };\n\n    var progressHandler = function(progress) {\n        var loaded = numLoaded + progress;\n        emitter.emit('progress', loaded / numTotal);\n    };\n\n    var completeHandler = function() {\n        numLoaded++;\n        emitter.emit('progress', numLoaded / numTotal);\n        next();\n    };\n\n    var errorHandler = function(e) {\n        emitter.emit('error', e);\n        next();\n    };\n\n    return Object.freeze({\n        on: emitter.on.bind(emitter),\n        once: emitter.once.bind(emitter),\n        off: emitter.off.bind(emitter),\n        add: add,\n        start: start\n    });\n};\n\nmodule.exports = Loader;\n","'use strict';\n\nfunction Microphone(connected, denied, error, thisArg) {\n    navigator.getUserMedia_ = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n    this._isSupported = !!navigator.getUserMedia_;\n    this._stream = null;\n\n    this._onConnected = connected.bind(thisArg || this);\n    this._onDenied = denied ? denied.bind(thisArg || this) : function() {};\n    this._onError = error ? error.bind(thisArg || this) : function() {};\n}\n\nMicrophone.prototype.connect = function() {\n    if(!this._isSupported) { return; }\n    var self = this;\n    navigator.getUserMedia_({audio:true}, function(stream) {\n        self._stream = stream;\n        self._onConnected(stream);\n    }, function(e) {\n        if(e.name === 'PermissionDeniedError' || e === 'PERMISSION_DENIED') {\n            console.log('Permission denied. You can undo this by clicking the camera icon with the red cross in the address bar');\n            self._onDenied();\n        }\n        else {\n            self._onError(e.message || e);\n        }\n    });\n    return this;\n};\n\nMicrophone.prototype.disconnect = function() {\n    if(this._stream) {\n        this._stream.stop();\n        this._stream = null;\n    }\n    return this;\n};\n\nObject.defineProperties(Microphone.prototype, {\n    'stream': {\n        get: function() {\n            return this._stream;\n        }\n    },\n    'isSupported': {\n        get: function() {\n            return this._isSupported;\n        }\n    }\n});\n\nmodule.exports = Microphone;\n","'use strict';\n\n/*\n * TODO: Ended handler\n */\n\nvar Group = require('../group.js');\n\nfunction SoundGroup(context, destination) {\n    Group.call(this, context, destination);\n    this._src = null;\n}\n\nSoundGroup.prototype = Object.create(Group.prototype);\nSoundGroup.prototype.constructor = SoundGroup;\n\n/*\n * Add / remove\n */\n\nSoundGroup.prototype.add = function(sound) {\n    Group.prototype.add.call(this, sound);\n    this._getSource();\n};\n\nSoundGroup.prototype.remove = function(soundOrId) {\n    Group.prototype.remove.call(this, soundOrId);\n    this._getSource();\n};\n\nSoundGroup.prototype._getSource = function() {\n    if(!this._sounds.length) { return; }\n\n    this._sounds.sort(function(a, b) {\n        return b.duration - a.duration;\n    });\n\n    this._src = this._sounds[0];\n};\n\n/*\n * Getters & Setters\n */\n\nObject.defineProperties(SoundGroup.prototype, {\n    'currentTime': {\n        get: function() {\n            return this._src ? this._src.currentTime : 0;\n        },\n        set: function(value) {\n            this.stop();\n            this.play(0, value);\n        }\n    },\n    'duration': {\n        get: function() {\n            return this._src ? this._src.duration : 0;\n        }\n    },\n    // 'ended': {\n    //     get: function() {\n    //         return this._src ? this._src.ended : false;\n    //     }\n    // },\n    'loop': {\n        get: function() {\n            return this._loop;\n        },\n        set: function(value) {\n            this._loop = !!value;\n            this._sounds.forEach(function(sound) {\n                sound.loop = this._loop;\n            });\n        }\n    },\n    'paused': {\n        get: function() {\n            return this._src ? this._src.paused : false;\n        }\n    },\n    'progress': {\n        get: function() {\n            return this._src ? this._src.progress : 0;\n        }\n    },\n    'playbackRate': {\n        get: function() {\n            return this._playbackRate;\n        },\n        set: function(value) {\n            this._playbackRate = value;\n            this._sounds.forEach(function(sound) {\n                sound.playbackRate = this._playbackRate;\n            });\n        }\n    },\n    'playing': {\n        get: function() {\n            return this._src ? this._src.playing : false;\n        }\n    }\n});\n\nmodule.exports = SoundGroup;\n","'use strict';\n\nvar Microphone = require('./microphone.js'),\n    Waveform = require('./waveform.js');\n\nvar Utils = {};\n\n/*\n * audio context\n */\n\nUtils.setContext = function(context) {\n    this._context = context;\n};\n\n/*\n * audio buffer\n */\n\nUtils.cloneBuffer = function(buffer) {\n    if(!this._context) { return buffer; }\n\n    var numChannels = buffer.numberOfChannels,\n        cloned = this._context.createBuffer(numChannels, buffer.length, buffer.sampleRate);\n    for (var i = 0; i < numChannels; i++) {\n        cloned.getChannelData(i).set(buffer.getChannelData(i));\n    }\n    return cloned;\n};\n\nUtils.reverseBuffer = function(buffer) {\n    var numChannels = buffer.numberOfChannels;\n    for (var i = 0; i < numChannels; i++) {\n        Array.prototype.reverse.call(buffer.getChannelData(i));\n    }\n    return buffer;\n};\n\n/*\n * ramp audio param\n */\n\nUtils.ramp = function(param, fromValue, toValue, duration) {\n    if(!this._context) { return; }\n\n    param.setValueAtTime(fromValue, this._context.currentTime);\n    param.linearRampToValueAtTime(toValue, this._context.currentTime + duration);\n};\n\n/*\n * get frequency from min to max by passing 0 to 1\n */\n\nUtils.getFrequency = function(value) {\n    if(!this._context) { return 0; }\n    // get frequency by passing number from 0 to 1\n    // Clamp the frequency between the minimum value (40 Hz) and half of the\n    // sampling rate.\n    var minValue = 40;\n    var maxValue = this._context.sampleRate / 2;\n    // Logarithm (base 2) to compute how many octaves fall in the range.\n    var numberOfOctaves = Math.log(maxValue / minValue) / Math.LN2;\n    // Compute a multiplier from 0 to 1 based on an exponential scale.\n    var multiplier = Math.pow(2, numberOfOctaves * (value - 1.0));\n    // Get back to the frequency value between min and max.\n    return maxValue * multiplier;\n};\n\n/*\n * microphone util\n */\n\nUtils.microphone = function(connected, denied, error, thisArg) {\n    return new Microphone(connected, denied, error, thisArg);\n};\n\n/*\n * Format seconds as timecode string\n */\n\nUtils.timeCode = function(seconds, delim) {\n    if(delim === undefined) { delim = ':'; }\n    var h = Math.floor(seconds / 3600);\n    var m = Math.floor((seconds % 3600) / 60);\n    var s = Math.floor((seconds % 3600) % 60);\n    var hr = (h === 0 ? '' : (h < 10 ? '0' + h + delim : h + delim));\n    var mn = (m < 10 ? '0' + m : m) + delim;\n    var sc = (s < 10 ? '0' + s : s);\n    return hr + mn + sc;\n};\n\n/*\n * waveform\n */\n\nUtils.waveform = function(buffer, length) {\n    return new Waveform(buffer, length);\n};\n\nmodule.exports = Utils;\n","'use strict';\n\nfunction Waveform() {\n\n    var audioBuffer,\n        waveformData;\n\n    var compute = function(buffer, length) {\n        if(!window.Float32Array || !window.AudioBuffer) { return []; }\n\n        var sameBuffer = buffer === audioBuffer;\n        var sameLength = waveformData && waveformData.length === length;\n        if(sameBuffer && sameLength) { return waveformData; }\n        \n        //console.log('-------------------');\n        //console.time('waveformData');\n        var waveform = new Float32Array(length),\n            chunk = Math.floor(buffer.length / length),\n            //chunk = buffer.length / length,\n            resolution = 5, // 10\n            incr = Math.floor(chunk / resolution),\n            greatest = 0;\n\n        if(incr < 1) { incr = 1; }\n\n        for (var i = 0, chnls = buffer.numberOfChannels; i < chnls; i++) {\n            // check each channel\n            var channel = buffer.getChannelData(i);\n            //for (var j = length - 1; j >= 0; j--) {\n            for (var j = 0; j < length; j++) {\n                // get highest value within the chunk\n                //var ch = j * chunk;\n                //for (var k = ch + chunk - 1; k >= ch; k -= incr) {\n                for (var k = j * chunk, l = k + chunk; k < l; k += incr) {\n                    // select highest value from channels\n                    var a = channel[k];\n                    if(a < 0) { a = -a; }\n                    if (a > waveform[j]) {\n                        waveform[j] = a;\n                    }\n                    // update highest overall for scaling\n                    if(a > greatest) {\n                        greatest = a;\n                    }\n                }\n            }\n        }\n        // scale up?\n        var scale = 1 / greatest,\n            len = waveform.length;\n        for (i = 0; i < len; i++) {\n            waveform[i] *= scale;\n        }\n        //console.timeEnd('waveformData');\n\n        // cache for repeated calls\n        audioBuffer = buffer;\n        waveformData = waveform;\n\n        return waveform;\n    };\n\n    var draw = function(config) {\n        var x, y;\n        var canvas = config.canvas || document.createElement('canvas');\n        var width = config.width || canvas.width;\n        var height = config.height || canvas.height;\n        var color = config.color || '#333333';\n        var bgColor = config.bgColor || '#dddddd';\n        var buffer = config.sound ? config.sound.data : config.buffer || audioBuffer;\n        var data = this.compute(buffer, width);\n\n        var context = canvas.getContext('2d');\n        context.strokeStyle = color;\n        context.fillStyle = bgColor;\n        context.fillRect(0, 0, width, height);\n        context.beginPath();\n        for (var i = 0; i < data.length; i++) {\n            x = i + 0.5;\n            y = height - Math.round(height * data[i]);\n            context.moveTo(x, y);\n            context.lineTo(x, height);\n        }\n        context.stroke();\n\n        return canvas;\n    };\n    \n    return Object.freeze({\n        compute: compute,\n        draw: draw\n    });\n}\n\nmodule.exports = Waveform;\n"],"sourceRoot":"/source/"}